"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"
" -----------------------------------------------------------------------------
"
" Agung Tuanany .init.vim (nvim) file
"
" -----------------------------------------------------------------------------
"
" Last Edited       : Mon Feb  1 09:38:43 PM WIB 2021
"
" -----------------------------------------------------------------------------
"
"  Heavily inspired by: @millermedeiros, @skwp
"  
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" Use Vim settings, rather then Vi settings (much better!).
" This must be first, because it changes other options as a side effect.
set nocompatible " required
" filetype off     " required

unlet! skip_defaults_vim
silent! source $VIMRUNTIME/defaults.vim

" TODO: this may not be in the correct place. It is intended to allow overriding <Leader>.
" source ~/.vimrc.before if it exists.
if filereadable(expand("~/.vimrc.before"))
    source ~/.vimrc.before
endif

" ======================================
" GENERAL CONFIG
" ======================================

set number                          " Enable line numbers.
set numberwidth=5                   " width of numbers line (default on gvim is 4)
set backspace=indent,eol,start      " Allow backspacing over everything
set showcmd                         " show partial command on last line of screen.
set showmode                        " Show the current mode.
set gcr=a:blinkon0                  " Disable cursor blink
set autoread                        " Reload file if changed externally

set noerrorbells                    " No beep or screen flash for error messages
set visualbell                      " No sound

" This makes vim act like all other editors, buffers can
" exist in the background without being in a window.
" http://items.sjbach.com/319/configuring-vim-right
set hidden


syntax on                           " Turn on syntax highlighting

" The mapleader has to be set before all pluggins start loading
let mapleader=","
let maplocalleader=";"

" ======================================
" MANAGE PLUGINS
" ======================================

" This loads all the plugin specified in ~/.vim/autoload/plug.vim
" Base runtime
if filereadable(expand("~/.vim/vim-plug.vim"))
    source ~/.vim/vim-plug.vim
endif
" TODO: manage plug into .vimplug
" au BufNewFile,BufRead *.vimplug set filetype=vim


" ======================================
" TURN OFF SWAP FILES
" ======================================

" --- Backup and swap file ---
set nobackup                        " Handling E510
set noswapfile                      " Handling E510
set nowritebackup                   " Handling E510

" ======================================
" PERSISTENT UNDO
" ======================================

" Keep undo across sessions, by storing in file
if has('persistent_undo') && isdirectory(expand('~').'/.vim/backups')
    silent !mkdir ~/.vim/backups > /dev/null 2>&1
    set undodir=~/.vim/backups
    set undofile
endif

" ======================================
" INDENTATION
" ======================================

set autoindent
set nosmartindent
set smarttab                        " Be smart when using tabs
set softtabstop=4                   " makes the spaces feel likes real tabs
set tabstop=4
set shiftwidth=4
set expandtab                       " Use spaces instead tabs

set copyindent
set cindent
set cinkeys-=0#
set indentkeys-=0#

" Auto indent pasted text
nnoremap p p=`]<C-o>
nnoremap P P=`]<C-o>


" ======================================
" TEXT-WRAP
" ======================================

set nowrap
set linebreak
set textwidth=80
set formatoptions=qrn1              " automatic formatiing

filetype plugin on
filetype indent on

" ======================================
"  FOLDING
" ======================================
" set foldmethod=manual                " manual fold
set foldmethod=indent              " manual indent
set foldnestmax=3                  " deepest fold is 3 levels
set nofoldenable                   " don't fold by default

" ======================================
"  COMPLETION
" ======================================

set wildmode=list:longest
set wildmenu                       " enable ctrl-n and ctrl-p to scroll thru matches
set wildchar=<TAB>                 " show possible completions.
set wildignore+=*/coverage
set wildignore=*.o,*.obj,*~        " stuff to ignore when tab completing
set wildignore+=*vim/backups*
set wildignore+=*sass-cache*
set wildignore+=*.gem
set wildignore+=log/**
set wildignore+=tmp/**
set wildignore+=*.png,*.jpg,*.gif
set wildignore+=*/.git/*,*/.hg/*,*/.svn/*,*/node_modules/*
set wildignore+=*.DS_STORE,*.db,node_modules/**,*.jpg,*.png,*.gif
set wildignore+=vendor/rails/**
set wildignore+=vendor/cache/**

" ======================================
"  SCROLLING
" ======================================

set scrolloff=8                     " Start scrolling n lines before horizontal
set sidescrolloff=15                " Start scrolling n chars before end of screen.
set sidescroll=1                    " The minimal number of columns to scroll horizontally.

" ======================================
"  SEARCH
" ======================================

set incsearch                       " Find the next match as we typ the search
set hlsearch                        " Hingligh searches by default
set ignorecase                      " make searches unsensitive,
set smartcase                       " ...unless they contain upper-case letters

" --- Search / regexp ---
set gdefault                        " RegExp global by defaulrg
set magic                           " Enable extended regexes

" ======================================
"  SEARCH
" ======================================
set modelines=0
set nomodeline


" ======================================
"  CUSTOM SETTING
" ======================================
so ~/.vim/settings.vim


"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" BEHAVIOR
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
set path+=**
set path=.,**

set spelllang=en_us
set encoding=utf-8 nobomb

" --- History / file handling ---
set history=999                " Default -20
set undolevels=999             " More undo


"" set esckeys                  " Allow cursor keys in insert mode
set nostartofline              " Make j/k respect to columns
" set virtualedit=all
set timeoutlen=500             " Log it wait for mapped commands
set ttimeoutlen=100            " Faster timeout for escape key and others























"" Use a bar-shaped cursor for insert mode, even through tmux.
" if exists('$TMUX')
"     let &t_SI = "\<Esc>Ptmux;\<Esc>\<Esc>]50;CursorShape=1\x7\<Esc>\\"
"     let &t_EI = "\<Esc>Ptmux;\<Esc>\<Esc>]50;CursorShape=0\x7\<Esc>\\"
" else
"     let &t_SI = "\<Esc>]50;CursorShape=1\x7"
"     let &t_EI = "\<Esc>]50;CursorShape=0\x7"
" endif

"" Information for open and close buffer
"set viminfo^=%



""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"" UI
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

set t_Co=256                " 256 colors terminal

let g:molokai_original=0
colorscheme molokai
"colorscheme gruvbox "molokai

" make 'var' keyword easier to spot
hi link javascriptType Keyword
" default ColorColumn is too distractive
hi clear ColorColumn
hi link ColorColumn FoldColumn
" defaul line number is too distractive
hi clear LineNr
hi link LineNr Comment
hi link OverLength Error




"" --- diff ---
"set diffopt=filler                                                   " Add vertical spaces to keep right and left aligned
"set diffopt+=iwhite                                                  " Ignonre whitespace changes



"" --- list chars ---
"" list spaces and tabs to avoid trailing spaces and mixed indentation
"" see key mapping at the end of file to toggle `list`
"set listchars=tab:▹\ ,trail:·,nbsp:⚋
"set fillchars=fold:-
"set list

"set cursorline                                                       " Highlight current line
"" set laststatus=2                                                   " Always show status line
"set report=0                                                         " Show all changes.
"set showmatch                                                        " show matching parenthesis
"set mat=2                                                            " Set how many tenths of a second blink
"set splitbelow splitright                                            " how to split new windows.
"set title                                                            " Show the filename in the window title bar.

"" highlight conflicts
"match ErrorMsg '^\(<\|=\|>\)\{7\}\([^=].\+\)\?$'


"" --- UI functions ---
"if &term =~ '256color'
"    " disable background color erase
"    set t_ut=
"endif

"if has('gui_running')
"    " set guifont=Menlo:h13
"    set gfn:Monaco:h14
"    set transp=0

"    " toolbar and scrollbars
"    set guioptions-=T  " remove toolbar
"    set guioptions-=L  " left scroll bar
"    set guioptions-=r  " right scroll bar
"    set guioptions-=b  " bottom scroll bar
"    set guioptions-=h  " only calculate bottom scroll size of current line
"    set shortmess=atI  " Don't show the intro message at start and truncate msgs (avoid press ENTER msgs).
"endif

"if has('title') && (has('gui_running') || &title)
"    set titlestring=
"    set titlestring+=%f
"    set titlestring+=%h%m%r%w
"    set titlestring+=\ -\ %{v:progname}
"    set titlestring+=\ -\ %{substitute(getcwd(),\ $HOME,\ '~',\ '')}
"endif

"" use relative line number by default
"if exists('+relativenumber')
"    set relativenumber
"endif

""set statusline^=%{coc#status()}

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"" Base Remap keys
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"" Your leader

"" It easy to Escape rather Ctrl+c or Esc button
":imap ii <Esc>
"" Two semicolons are easy to type
"imap ;; <Esc>

"" Fast saving
"nmap <leader>w :w!<cr>





"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" KEY MAPPING
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" " mapleader set at the top of the file to avoid conflicts


" " --- FIX/IMPROVE DEFAULT BEHAVIOR ---

" " avoid mistyping commands
" command! W w
" command! Wq wq
" command! Bd bd

" " Split line (sister to [J]oin lines)
" " The normal use of S is covered by cc, so don't worry about shadowing
" nnoremap S i<cr><esc><right>

" " movement by screen line instead of file line (for text wrap)
" nnoremap j gj
" nnoremap <down> gj
" nnoremap k gk
" nnoremap <up> gk

" Swap v and CTRL-V, because Block mode is more useful than Visual mode
nnoremap v <c-V>
nnoremap <c-V> v
vnoremap v <c-V>
vnoremap <c-V> v

" " next tab
" nnoremap <C-Tab> :tabn<CR>

" " automatic esc, really uncommon to type jj,jk
" inoremap jj <ESC>
" inoremap jk <Esc>

" " Faster scrolling
" nnoremap <C-e> 3<C-e>
" nnoremap <C-y> 3<C-y>

" " Bubble single lines, similar to Eclipse (requires unimpaired.vim)
" nmap <C-Up> [e
" nmap <C-Down> ]e

" " Bubble multiple lines, similar to Eclipse (requires unimpaired.vim)
" vmap <C-Up> [egv
" vmap <C-Down> ]egv

" " Duplicate lines, similar to Eclipse
" noremap <C-S-Up> YP
" noremap <C-S-Down> YP

" " 'fix' search regexp to be compatible with Perl format
" " nmap / /\v
" " vmap / /\v

" " Use the damn hjkl keys
" noremap <up> <nop>
" noremap <down> <nop>
" noremap <left> <nop>
" noremap <right> <nop>

" " Improve the 'search word under cursor' behavior
" nnoremap * :silent call KeywordsAll()<CR> *
" nnoremap # :silent call KeywordsAll()<CR> #

" " --- COMMON STUFF / HELPERS ---

" " Toggle show tabs and trailing spaces
" nnoremap <leader>c :set nolist!<CR>

" " Clear the search highlight
" nnoremap <silent> \ :silent nohlsearch<CR>

" " text wrap: Hard wrap paragraph text (similar to TextMate Ctrl+Q)
" nnoremap <leader>tw gqip
" nnoremap <leader>nw :set nowrap<CR>

" " Open file (useful for HTML)
" noremap <silent> <leader>o :!open %<CR>

" " Reformat code
" nnoremap <leader>rf gg=G

" " I use retab too much and it's hard to type
" nnoremap <leader>rt :retab!<CR>

" " Pull word under cursor into LHS of a substitute (find and replace)
" nnoremap <leader>rr :silent call KeywordsAll()<CR> :%s#\<<C-r>=expand("<cword>")<CR>\>#

" " Insert/append a single character
" " noremap ,, i_<esc>r
" " noremap ;; a_<esc>r

" " Visually select the text that was last edited/pasted
" nnoremap <leader>v `[v`]

" " Fast Ack
" nnoremap <leader>a :tab split<CR>:Ack<Space>
" nnoremap <leader>aw :silent call KeywordsAll()<CR> :tab split<CR>:Ack<cword><CR> :silent call KeywordsBasic()<CR>

" " Toggle spelling hints
" nnoremap <silent> <leader>ts :set spell!<CR>

" " Move between splits (windows)
" noremap <C-h> <C-w>h
" noremap <C-j> <C-w>j
" noremap <C-k> <C-w>k
" noremap <C-l> <C-w>l

" " Move windows around (only works on same row)
" noremap <C-S-Right> <C-w>r
" noremap <C-S-Left> <C-w>R

" " Open current buffer in a new split
" noremap <leader>s :vsplit<cr>
" noremap <leader>i :split<cr>

" " Close window
" noremap <leader>q :clo<CR>

" " Selete buffer but keep window open (requires bufkill.vim)
" map <leader>bd :Bd<CR>

" " Smarter next/prev buffer (requires bufkill.vim)
" map <leader>bn :BF<CR>
" map <leader>bp :BB<CR>

" " Resize splits (http://vim.wikia.com/wiki/Resize_splits_more_quickly)
" nnoremap <silent> <Leader>+ :exe "resize " . (winheight(0) * 3/2)<CR>
" nnoremap <silent> <Leader>- :exe "resize " . (winheight(0) * 2/3)<CR>

" " Move between splits (windows)
" noremap <C-h> <C-w>h
" noremap <C-j> <C-w>j
" noremap <C-k> <C-w>k
" noremap <C-l> <C-w>l

" " Move windows around (only works on same row)
" noremap <C-S-Right> <C-w>r
" noremap <C-S-Left> <C-w>R

" " Close window
" noremap <leader>q :clo<CR>

" " Selete buffer but keep window open (requires bufkill.vim)
" map <leader>bd :Bd<CR>

" " Smarter next/prev buffer (requires bufkill.vim)
" map <leader>bn :BF<CR>
" map <leader>bp :BB<CR>

" Resize splits (http://vim.wikia.com/wiki/Resize_splits_more_quickly)
nnoremap <silent> <Leader>+ :exe "resize " . (winheight(0) * 3/2)<CR>
nnoremap <silent> <Leader>- :exe "resize " . (winheight(0) * 2/3)<CR>

" " --- requires(markdown-preview.nvim)  ---
" nmap <leader>mp :MarkdownPreview<CR>
" nmap <leader>MP :MarkdownPreviewStop<CR>

" set paste mode
nnoremap <leader>ps :set paste<CR>
nnoremap <leader>PS :set nopaste<CR>




"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" FILE HANDLING
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" augroup mm_buf_cmds
"     " clear commands before resetting
"     autocmd!

"     " turn off expandtab for editing makefiles
"     autocmd FileType make setlocal noexpandtab

"     " use for python tabs
"     autocmd BufEnter *.py set ai sw=4 ts=4 sta et fo=croql

"     " Automatically removing all trailing whitespace
"     autocmd BufWritePre * %s/\s\+$//e


"     " Enable coc-highlight
"     " autocmd CursorHold * silent call CocActionAsync('highlight')

"     " Plug 'tpope/vim-commentary'
"     autocmd FileType apache setlocal commentstring=#\ %s

"     " some file types override it
"     autocmd FileType * set cindent

"     " Pandoc highlight markdown
"     au BufNewFile,BufFilePre,BufRead *.md set filetype=markdown
"     autocmd! FileType vimwiki set syntax=markdown

"     autocmd FileType markdown let b:sleuth_automatic=0
"     autocmd FileType markdown set conceallevel=0
"     autocmd FileType markdown normal zR

" augroup END

" " FIXME: YAML setup
" " augroup yamlcmds
" "     autocmd BufReadPost *yaml,*yml colorscheme molokai
" "     autocmd BufWinLeave *yaml,*yml colorscheme molokai
" "     autocmd BufReadPost *.yaml,*.yml set sw=4 ts=4 sts=4 expandtab
" "     autocmd Bufwritepre *.yaml,*.yml silent! %s/\s\+$// " Remove trailing whitespace
" "     autocmd BufwritePre *.yaml,*yml silent! %s/^\(\s*\)#\(\S\)/\1# \2/g
" "     autocmd BufwritePre *.yaml,*yml silent! %s/^\(\s*\)#\(\w\)/\1- \2/g
 " augroup END
