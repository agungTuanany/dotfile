"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" MANAGE PLUG
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
set nocompatible                        " required
filetype off                            " required

" Base runtime
call plug#begin('~/.vim/plugged')

" Core Plugins
Plug 'ctrlpvim/ctrlp.vim'               " Full path Fuzzy file, buffer, mru, tag .. Finder for vim
Plug 'scrooloose/nerdtree'              " A File system explorer
Plug 'scrooloose/nerdcommenter'         " Comments function
Plug 'godlygeek/tabular'                " Line up text
Plug 'tpope/vim-unimpaired'             " Pairs handy brackets. XXX@NOTE: Implemented with NVIM
Plug 'jiangmiao/auto-pairs'             " Insert, or delete bracket, parens, quotes in pair
Plug 'christoomey/vim-tmux-navigator'   " Seamless navigation between tmux panes and vim split

""" TODO:


" Lightline statusbar
Plug 'itchyny/lightline.vim'

" colorschemes
Plug 'morhetz/gruvbox'

call plug#end()

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" BEHAVIOR
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
syntax on
filetype plugin indent on      " enable detection, plugins and indent

set path+=**                   " Searches current directory recursively.
set wildmenu                   " Display all matches when tab complete.
set incsearch                  " Show the 'best math so far' as typed

set spelllang=en_us            " spell checking
set encoding=utf-8 nobomb      " BOM often causes trouble, UTF-8 is awsum.

" --- Performance / buffer ---
set hidden                     " can put buffer to the background without wiring to disk, will remember history/marks
set lazyredraw                 " Do not update the display while executing macros
set ttyfast                    " Send more characters at a given time


" --- History / file handling ---
set history=999                " Default -20
set undolevels=999             " More undo
set autoread                   " Reload file if changed externally


" --- Backup and swap file ---
set nobackup                   " Handling E510
set noswapfile                 " Handling E510
set nowritebackup              " Handling E510

" --- Search / regexp ---
set gdefault                   " RegExp global by defaulrg
set magic                      " Enable extended regexes
set hlsearch                   " higlight searches
set ignorecase smartcase       " make searches unsensitive, unless they contain upper-case letters



" --- Keys ---
set backspace=indent,eol,start " Allow backspacing over everything
"set esckeys                    " Allow cursor keys in insert mode
set nostartofline              " Make j/k respect to columns
"set virtualedit=all
set timeoutlen=500             " Log it wait for mapped commands
set ttimeoutlen=100            " Faster timeout for escape key and others



" Use a bar-shaped cursor for insert mode, even through tmux.
if exists('$TMUX')
    let &t_SI = "\<Esc>Ptmux;\<Esc>\<Esc>]50;CursorShape=1\x7\<Esc>\\"
    let &t_EI = "\<Esc>Ptmux;\<Esc>\<Esc>]50;CursorShape=0\x7\<Esc>\\"
else
    let &t_SI = "\<Esc>]50;CursorShape=1\x7"
    let &t_EI = "\<Esc>]50;CursorShape=0\x7"
endif

" Information for open and close buffer
set viminfo^=%



"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Base Remap keys
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" It easy to Escape rather Ctrl+c or Esc button
:imap ii <Esc>
" Two semicolons are easy to type
imap ;; <Esc>

" Your leader
let mapleader=","
let maplocalleader=";"







"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" INDENTATION AND TEXT-WRAP
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Use spaces instead tabs
set expandtab
" Be smart when using tabs
set smarttab
set autoindent smartindent
set copyindent
"set softtabstop=4
set tabstop=4
set shiftwidth=4

set nowrap
set textwidth=80
set formatoptions=qrn1      " automatic formatiing


"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"  UI
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" --- General UI ---
set t_Co=256
colorscheme gruvbox
set background=dark

" Make 'var' keyword easier to spot
hi link javascriptType Keyword

" Default line number is too distract Ives
hi clear ColorColumn
hi link ColorColumn FoldColumn
hi clear lineNr
hi link LineNr Commnet
hi link overLength Error

if &term =~ '256'
    " Disable background color erase
    set t_ut=
endif

" --- UI settings ---

if has('gui_running')
    set gfn:Monaco:h14
    set transp=0

    " toolbar and scroll bars
    set guioptions-=T       " Remove toolbar
    set guioptions-=L       " Left scroll bar
    set guioptions-=r       " Right scroll bar
    set guioptions-=b       " Bottom scroll bar
    set guioptions-=h       " Only calculate bottom scroll size of current line
    set shortmess=atI       " Don't show the intro message at start and truncate messages (avoid press Enter messages)
endif

"set cursorline         " Highlight current line
"set cursorcolumn       " Higlightk
set laststatus=2        " Always show status line default value=1
set numberwidth=5
set report=0

set number relativenumber
let g:rehash256 = 1



"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" KEY MAPPINGS
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""nmap <leader>ls "call ListTrans_toggle_format()<CR>

" Swap v and CTRL-V, because Block mode is more useful than Visual mode
nnoremap v <c-V>
nnoremap <c-V> v
vnoremap v <c=V>
vnoremap <c-V> v

" Avoiding mistyping commands
command! W w
command! Wq wq
command! Bd bd

" Movement by scren line instead of file line (for text wrap)
nnoremap j gj
nnoremap <dowm> gj
nnoremap k gk
nnoremap <up> gk

" Next tab
nnoremap <C-tab> :tabn<CR>

" automatic esc
inoremap jj <Esc>
inoremap jk <Esc>
inoremap kk <esc>

" Faster scrolling
nnoremap <C-e> 5<C-e>
nnoremap <C-y> 3<C-y>

" Use damn hjkl keys
nnoremap <up>    <nop>
nnoremap <down>  <nop>
nnoremap <left>  <nop>
nnoremap <right> <nop>

" Move between splits
noremap <C-h> <C-w>h
noremap <C-j> <c-w>j
noremap <C-k> <C-w>k
noremap <C-l> <C-w>l


" Close window
nnoremap <leader>q :clo<CR>

" Open currenct buffers in a new split
nnoremap <leader>s :vsplit<cr>
nnoremap <leader>i :split<cr>

" Reformat code
nnoremap <leader>rf gg=G

" Toggle spelling hints
nnoremap <silent> <leader>ts :set spell!<CR>

" Visually  select the text that was last edited/pasted

" Fast saving
nmap <leader>w :w!<CR>

" Set Explore Beside nerdtree options
nnoremap <leader>ex :Lex<CR>

" Bubble single lines, similar to Eclipse (requires unimpaired.vim)
nmap <C-Up> [e
nmap <C-Down> ]e

" Bubble multiple lines, similar to Eclipse (requires unimpaired.vim)
vmap <C-Down> ]egv
vmap <C-Up> [egv

" Duplicate lines. simliar to Eclipse
"noremap <C-S-Up> YP
"noremap <C-S-Down> YP

""" TODO: Research what is C-S-Right and C-S-Left. Why when you press CTRL-LEFT button nothing happen?
""" You still confusing about mapping on VIM.

" Move windows around (only works on same row>
" <C-S> equivalent into CTRL-SHIFT
"noremap <C-S-Right> <C-w>r
"noremap <C-S-Left> <C-w>R

" --- COMMON STUFF / HELPERS ---

" Toggle sohw tabs and trailing spaces
nnoremap <leader>c :set nolist!<CR>

" Clear the search higlight
nnoremap <silent> \ :silent nohlsearch<CR>

" Hard wrap paragraph text (similar to TextMate Ctrl+Q)
nnoremap <leader>tw gqip


"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" PLUGINS
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" --- NERDTree ----
let NERDTreeIgnore=['.DS_Store']
let NERDTreeShowBookmarks=0         "show bookmarks on startup
let NERDTreeHighlightCursorline=1   "Highlight the selected entry in the tree
let NERDTreeShowLineNumbers=0
let NERDTreeMinimalUI=1
let NERDTreeWinSize=20
noremap <leader>nt :NERDTreeToggle<CR>
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTree") && b:NERDTree.isTabTree()) | q | endif


" --- NERDCommenter ---
let NERDSpaceDelims=1               " space around delimiters
let NERDRemoveExtraSpaces=1
let g:NERDCustomDelimiters = {
            \ 'scss': { 'left': '//' }
            \ }


" --- Plug 'godlygeek/tabular' ---
noremap <silent> <leader>t: :Tabularize /:<CR>
noremap <silent> <leader>t= :Tabularize /=<CR>
noremap <silent> <leader>t, :Tabularize /,<CR>
noremap <silent> <leader>t{ :Tabularize /{<CR>
noremap <silent> <leader>t" :Tabularize /"<CR>
noremap <silent> <leader>t' :Tabularize /'<CR>
noremap <silent> <leader>t[ :Tabularize /[<CR>
noremap <silent> <leader>t/ :Tabularize ///<CR>
noremap <silent> <leader>t\| :Tabularize /\|<CR>



" ---  Plug 'itchyny/lightline.vim' ---


"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" FILE HANDLING IN GROUP
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
augroup file_handling_group
    " Clear commands before restting
    autocmd!

    " Change your ESC to use Caps_lock
    au VimEnter * !xmodmap -e 'clear Lock' -e 'keycode 0x42 = Escape'
    au VimLeave * !xmodmap -e 'clear Lock' -e 'keycode 0x42 = Caps_Lock'

    " Automaticall removing all trailing whitespace
    autocmd BufWritePre * %s/\s\+$//e
augroup END
